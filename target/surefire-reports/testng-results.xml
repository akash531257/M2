<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-26T22:31:18 EST" name="Suite" finished-at="2021-12-26T22:31:18 EST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite started-at="2021-12-26T22:31:16 EST" name="SuiteA" finished-at="2021-12-26T22:31:17 EST" duration-ms="1133">
    <groups>
    </groups>
    <test started-at="2021-12-26T22:31:16 EST" name="login test" finished-at="2021-12-26T22:31:16 EST" duration-ms="68">
      <class name="testcases.SuiteA.LoginTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="initialize" finished-at="2021-12-26T22:31:16 EST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="beforemath()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="beforemath" finished-at="2021-12-26T22:31:16 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemath -->
        <test-method signature="doLogin()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="doLogin" finished-at="2021-12-26T22:31:16 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="aftermeth()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="aftermeth" finished-at="2021-12-26T22:31:16 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermeth -->
        <test-method is-config="true" signature="beforemath()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="beforemath" finished-at="2021-12-26T22:31:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemath -->
        <test-method signature="logout()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="logout" finished-at="2021-12-26T22:31:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="aftermeth()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="aftermeth" finished-at="2021-12-26T22:31:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermeth -->
        <test-method is-config="true" signature="quitting()[pri:0, instance:testcases.SuiteA.LoginTest@c0c2f8d]" started-at="2021-12-26T22:31:16 EST" name="quitting" finished-at="2021-12-26T22:31:16 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitting -->
      </class> <!-- testcases.SuiteA.LoginTest -->
    </test> <!-- login test -->
    <test started-at="2021-12-26T22:31:17 EST" name="Create user Test" finished-at="2021-12-26T22:31:17 EST" duration-ms="31">
      <class name="testcases.SuiteA.CreateUser">
        <test-method signature="createUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="createUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[india]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="createUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="createUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abcdef@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[canada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="createUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="createUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abcadasd@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[usa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="deleteUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="deleteUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[duser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dpass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dabc@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dindia]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="deleteUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="deleteUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[duser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dpass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dabcdef@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dcanada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="deleteUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.SuiteA.CreateUser@ed7f8b4]" started-at="2021-12-26T22:31:17 EST" name="deleteUser" data-provider="getData" finished-at="2021-12-26T22:31:17 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[duser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dpass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dabcadasd@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dusa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- testcases.SuiteA.CreateUser -->
    </test> <!-- Create user Test -->
  </suite> <!-- SuiteA -->
  <suite started-at="2021-12-26T22:31:17 EST" name="SuiteB" finished-at="2021-12-26T22:31:18 EST" duration-ms="54">
    <groups>
    </groups>
    <test started-at="2021-12-26T22:31:17 EST" name="Register Test" finished-at="2021-12-26T22:31:18 EST" duration-ms="19">
      <class name="testcases.SuiteB.ValidateUser">
        <test-method signature="Validate()[pri:0, instance:testcases.SuiteB.ValidateUser@58ea606c]" started-at="2021-12-26T22:31:17 EST" name="Validate" finished-at="2021-12-26T22:31:18 EST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [DF] but found [ABC],
expected [DEF] but found [ABC]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [DF] but found [ABC],
expected [DEF] but found [ABC]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testcases.SuiteB.ValidateUser.Validate(ValidateUser.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Validate -->
        <test-method signature="makefaillist()[pri:0, instance:testcases.SuiteB.ValidateUser@58ea606c]" started-at="2021-12-26T22:31:18 EST" name="makefaillist" finished-at="2021-12-26T22:31:18 EST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[making a fail test]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: making a fail test
at org.testng.Assert.fail(Assert.java:97)
at testcases.SuiteB.ValidateUser.makefaillist(ValidateUser.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makefaillist -->
      </class> <!-- testcases.SuiteB.ValidateUser -->
    </test> <!-- Register Test -->
    <test started-at="2021-12-26T22:31:18 EST" name="SearchandBuy Test" finished-at="2021-12-26T22:31:18 EST" duration-ms="7">
      <class name="testcases.SuiteB.SearchAndBuyPhone">
        <test-method signature="search(org.testng.ITestContext)[pri:1, instance:testcases.SuiteB.SearchAndBuyPhone@5609159b]" started-at="2021-12-26T22:31:18 EST" name="search" finished-at="2021-12-26T22:31:18 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60bd273d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method signature="selectPhone(org.testng.ITestContext)[pri:2, instance:testcases.SuiteB.SearchAndBuyPhone@5609159b]" started-at="2021-12-26T22:31:18 EST" name="selectPhone" finished-at="2021-12-26T22:31:18 EST" depends-on-methods="testcases.SuiteB.SearchAndBuyPhone.search" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60bd273d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPhone -->
        <test-method signature="checkout()[pri:3, instance:testcases.SuiteB.SearchAndBuyPhone@5609159b]" started-at="2021-12-26T22:31:18 EST" name="checkout" finished-at="2021-12-26T22:31:18 EST" depends-on-methods="testcases.SuiteB.SearchAndBuyPhone.search, testcases.SuiteB.SearchAndBuyPhone.selectPhone" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkout -->
      </class> <!-- testcases.SuiteB.SearchAndBuyPhone -->
    </test> <!-- SearchandBuy Test -->
  </suite> <!-- SuiteB -->
</testng-results>
